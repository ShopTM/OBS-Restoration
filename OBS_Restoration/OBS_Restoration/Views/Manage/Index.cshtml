@model Models.VM.IndexViewModel
@{
    ViewBag.Title = "Profile Settings";
}

<ul class="nav nav-tabs settings-nav">
    <li class="active"><a href="#profile-settings" data-toggle="tab">Profile Settings</a></li>
    <li><a href="#email-signature" data-toggle="tab">Email Signature</a></li>
</ul>

<!-- Tab panes -->
<div class="tab-content usersettings">
    <div class="tab-pane active" id="profile-settings">
        <div>
            <h2>@ViewBag.Title</h2>
            <p class="text-success">@ViewBag.StatusMessage</p>
            <div>
                <h4>Change your account settings</h4>
                <hr />
                <div>
                    <div><b>User information:</b></div>
                    <br />
                    <div>
                        @using (Ajax.BeginForm("EditUserInformation", "Manage", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccess" }))
                        {
                            @Html.LabelFor(x => x.FirstName, "First Name ")
                            @Html.TextBoxFor(x => x.FirstName, new { Id = "firstName", required = true, @class = "form-control" })
                            <br />
                            <br />
                            @Html.LabelFor(x => x.LastName, "Last Name ")
                            @Html.TextBoxFor(x => x.LastName, new { Id = "lastName", required = true, @class = "form-control" })
                            @Html.ValidationSummary();
                            <input type="submit" name="SaveButton" value="Save" class="btn btn-default" />
                        }
                    </div>

                    <br />
                    <br />

                    <div>
                        <div><b>Time Zone:</b></div>
                        @using (Ajax.BeginForm("ChangeTimeZone", "Manage", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccess" }))
                        {
                            @Html.DropDownList("timeZone", ViewBag.TimeZonesList as SelectList, "Select TimeZone", new { @class = "form-control" });
                            <br />
                            <input type="submit" name="SaveButton" value="Save" class="btn btn-default" />
                        }
                    </div>
                    <br />
                    <div><b>Password:</b></div>
                    <div>
                        [
                        @if (Model.HasPassword)
                        {
                            @Html.ActionLink("Change your password", "ChangePassword")
                        }
                        else
                        {
                            @Html.ActionLink("Create", "SetPassword")
                        }
                        ]
                    </div>
                    @*<dt>External Logins:</dt>
                        <dd>
                            @Model.Logins.Count [
                            @Html.ActionLink("Manage", "ManageLogins") ]
                        </dd>*@
                    @*
                        Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                         See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                            for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                         Uncomment the following block after you have set up two-factor authentication
                    *@
                    @*
                        <dt>Phone Number:</dt>
                        <dd>
                            @(Model.PhoneNumber ?? "None")
                            @if (Model.PhoneNumber != null)
                            {
                                <br />
                                <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                                using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                                }
                            }
                            else
                            {
                                <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                            }
                        </dd>
                    *@
                    @*<dt>Two-Factor Authentication:</dt>
                        <dd>
                            <p>
                                There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                                for details on setting up this ASP.NET application to support two-factor authentication.
                            </p>
                            @if (Model.TwoFactor)
                                {
                                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>Enabled
                                        <input type="submit" value="Disable" class="btn btn-link" />
                                        </text>
                                    }
                                }
                                else
                                {
                                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>Disabled
                                        <input type="submit" value="Enable" class="btn btn-link" />
                                        </text>
                                    }
                                }
                            </dd>*@
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane" id="email-signature">
        <div class="center-block">
            <div class="col-md-6 col-md-offset-3">
                <br />
                <textarea id="createBodyInput" style="height: 200px" name="input" data-bind="editor:  {body: $root.Signature}"></textarea>
				<input type="submit" name="SaveButton" value="Save" class="btn-body btn" data-bind="click: $root.SaveSignature, enable: buttonEnabled()" />
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
	function onSuccess(result) {
		if (result) {
			$.notify("Success", "success");
		}
		else {
			$.notify(result.Message, "error");
		}
    }
</script>

@section scripts {
    <script type="text/javascript">
        function EmailSignatureModel() {
            var self = this;
            BaseClass.call(this);
            self.Signature = ko.observable('');

            $.ajax({
                type: "POST",
                url: appPath + "/Companies/GetEmailSignature",
                async: false,
                success: function (response) {
                    if (response.Success && response.Data && response.Data.Signature) {
                        self.Signature(self.Signature() + response.Data.Signature);
                    }
                },
                error: function (response) {
                    $.notify("Something went wrong", "error");
                }
            });
            self.buttonEnabled(false);
            self.SaveSignature = function () {
                if (self.Signature() != null && self.Signature() != "") {
                    var EmailSignatureModel = { Signature: self.Signature() };
                    $.ajax({
                        type: "POST",
                        url: appPath + "/Manage/SaveEmailSignature",
                        data: { "signatureModel": EmailSignatureModel },
                        success: function (data) {
                        	self.buttonEnabled(true);
                            if (data === true) {
                                $.notify("Email signature saved", "success");
                            }
                            else {
                                $.notify(data, "error");
                            }
                        },
                        error: function (data) {
                        	self.buttonEnabled(true);
                            $.notify("Something went wrong", "error");
                        }
                    });
                }
            }
            return self;
        }

        ko.applyBindings(new EmailSignatureModel(), $(".usersettings")[0]);
    </script>
}